{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\n\nconst startBtnEl = document.querySelector('[data-start]');\nstartBtnEl.disabled = true;\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst timerFieldEl = document.querySelector('.timer');\nconst timerDays = document.querySelector('[data-days]');\nconst timerHours = document.querySelector('[data-hourse]');\nconst timerMinutes = document.querySelector('[data-minutes]');\nconst timerSeconds = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > Date.now()) {\n      userSelectedDate = selectedDates[0];\n      startBtnEl.disabled = false;\n    } else {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    }\n  },\n};\n\nclass Timer {\n  constructor(tick) {\n    this.tick = tick;\n  }\n  start() {\n    setInterval(() => {\n      const diff = userSelectedDate - Date.now();\n      const time = this.convertMs(diff);\n      this.tick(time);\n    }, 1000);\n    startBtnEl.disabled = true;\n    inputEl.disabled = true;\n  }\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n}\n\nconst timer = new Timer(onTimerTick);\n\nstartBtnEl.addEventListener('click', () => {\n  timer.start();\n});\n\nfunction onTimerTick(time) {\n  console.log(time);\n}\n\nflatpickr('#datetime-picker', options);\n"],"names":["userSelectedDate","startBtnEl","inputEl","options","selectedDates","iziToast","Timer","tick","diff","time","ms","days","hours","minutes","seconds","timer","onTimerTick","flatpickr"],"mappings":"+IAKA,IAAIA,EAEJ,MAAMC,EAAa,SAAS,cAAc,cAAc,EACxDA,EAAW,SAAW,GAEtB,MAAMC,EAAU,SAAS,cAAc,kBAAkB,EACpC,SAAS,cAAc,QAAQ,EAClC,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,eAAe,EACpC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB,EAE5D,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAK,KAAK,IAAG,GAC7BJ,EAAmBI,EAAc,GACjCH,EAAW,SAAW,IAEtBI,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,CAEJ,CACH,EAEA,MAAMC,CAAM,CACV,YAAYC,EAAM,CAChB,KAAK,KAAOA,CACb,CACD,OAAQ,CACN,YAAY,IAAM,CAChB,MAAMC,EAAOR,EAAmB,KAAK,IAAG,EAClCS,EAAO,KAAK,UAAUD,CAAI,EAChC,KAAK,KAAKC,CAAI,CACf,EAAE,GAAI,EACPR,EAAW,SAAW,GACtBC,EAAQ,SAAW,EACpB,CACD,UAAUQ,EAAI,CAQZ,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACH,CAEA,MAAMC,EAAQ,IAAIT,EAAMU,CAAW,EAEnCf,EAAW,iBAAiB,QAAS,IAAM,CACzCc,EAAM,MAAK,CACb,CAAC,EAED,SAASC,EAAYP,EAAM,CACzB,QAAQ,IAAIA,CAAI,CAClB,CAEAQ,EAAU,mBAAoBd,CAAO"}